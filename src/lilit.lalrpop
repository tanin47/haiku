use std::str::FromStr;
use ast::*;

grammar;

pub Mod: Box<Mod> = {
  <f:Func> <m:Mod> => Box::new(Mod { func:f, next_opt:Some(m) }),
  <f:Func> => Box::new(Mod { func:f, next_opt:None }),
};

Func: Box<Func> = {
  "def" <id:Id> "(" ")" <expr:Expr> "end" => Box::new(Func { name:id, expr:expr }),
};

Expr: Box<Num> = {
  <n:Num> => Box::new(Num { value:n }),
};

Id: Box<String> = {
  r"[a-z]+" => Box::new(String::from(<>)),
};

Num: i32 = {
  r"[0-9]+" => i32::from_str(<>).unwrap(),
};
