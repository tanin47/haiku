class Native__Void
end

class Native__Int
end

class Native__Null
end

class Native__String
end

class Native__Char
end

class Native__Any
end

def native__vprintf(text: Native__String, args...: Native__Any): Native__Void
end

class Native__Struct__Process(pid: Native__Int, in: Native__Int, out: Native__Int, err: Native__Int)
end

def native__lilit_exec(cmd: Native__String): Native__Struct__Process
end

def native__lilit_write(in: Native__Int, c: Native__Char): Native__Void
end

def native__lilit_read(out: Native__Int): Native__Char
end

def native__lilit_wait(pid: Native__Int): Native__Int
end

class Void
end

class Int(underlying: Native__Int)
end

class String(underlying: Native__String)
end

class Char(underlying: Native__Char)
end

class ReadPipe(pipe: Native__Int)
  def read(): Char
    Char(native__lilit_read(pipe))
  end
end

class WritePipe(pipe: Native__Int)
  def write(c: Char): Void
    native__lilit_write(pipe, c)
  end
end

class Process(pid: Int, in: WritePipe, out: ReadPipe, err: ReadPipe)
  def wait(): Int
    Int(native__lilit_wait(pid.underlying))
  end

  def read(): Char
    out.read()
  end

  def write(c: Char): Void
    in.write(c)
  end
end

class Exec(cmd: String)
  def start(): Process
    process = native__lilit_exec(cmd.underlying)
    Process(process.pid, WritePipe(process.in), ReadPipe(process.out), ReadPipe(process.err))
  end
end

def main(): Int
  native__vprintf("Start\n".underlying)
  process = native__lilit_exec("ls".underlying)
  native__lilit_write(process.in, 'c'.underlying)
  native__vprintf("Read from %d\n".underlying, process.out)
  native__vprintf("Read %c\n".underlying, native__lilit_read(process.out))
  native__lilit_write(process.in, 'b'.underlying)
  native__vprintf("Done\n".underlying)
  0
end

//def main(): Int
//  native__vprintf("before".underlying)
//  proc = Exec("ls").start()
//  proc.write('c')
//  proc.read()
//  proc.write('b')
//  native__vprintf("Exit %d".underlying, proc.wait().underlying)
//  native__vprintf("after".underlying)
//  0
//end

